FAANG Core LeetCode Set (~75 Problems)

-------------------------------------------------
Arrays & Strings (+ Hashing / Intervals)
-------------------------------------------------
1. Two Sum
121. Best Time to Buy and Sell Stock
53. Maximum Subarray (Kadane)
238. Product of Array Except Self
560. Subarray Sum Equals K
152. Maximum Product Subarray
11. Container With Most Water
15. 3Sum
49. Group Anagrams
242. Valid Anagram
128. Longest Consecutive Sequence
3. Longest Substring Without Repeating Characters (sliding window)
76. Minimum Window Substring (sliding window)
56. Merge Intervals
57. Insert Interval
394. Decode String
239. Sliding Window Maximum (deque)

-------------------------------------------------
Linked Lists
-------------------------------------------------
206. Reverse Linked List
21. Merge Two Sorted Lists
141. Linked List Cycle
142. Linked List Cycle II
19. Remove Nth Node From End of List
2. Add Two Numbers
143. Reorder List
23. Merge k Sorted Lists (heap)

-------------------------------------------------
Stacks / Monotonic Structures
-------------------------------------------------
20. Valid Parentheses
155. Min Stack
739. Daily Temperatures (monotonic stack)
84. Largest Rectangle in Histogram
32. Longest Valid Parentheses

-------------------------------------------------
Trees (DFS/BFS, recursion)
-------------------------------------------------
104. Maximum Depth of Binary Tree
100. Same Tree
101. Symmetric Tree
226. Invert Binary Tree
102. Binary Tree Level Order Traversal
98. Validate Binary Search Tree
230. Kth Smallest Element in a BST
235. Lowest Common Ancestor of a BST
236. Lowest Common Ancestor of a Binary Tree
124. Binary Tree Maximum Path Sum
297. Serialize and Deserialize Binary Tree

-------------------------------------------------
Heaps / Priority Queue
-------------------------------------------------
215. Kth Largest Element in an Array
347. Top K Frequent Elements
973. K Closest Points to Origin
295. Find Median from Data Stream (two heaps)
621. Task Scheduler
253. Meeting Rooms II (Premium—optional)

-------------------------------------------------
Graphs (BFS/DFS/Topo)
-------------------------------------------------
200. Number of Islands
133. Clone Graph
207. Course Schedule (topo sort)
210. Course Schedule II (topo sort)
417. Pacific Atlantic Water Flow
127. Word Ladder (BFS)
994. Rotting Oranges
399. Evaluate Division (graph + DFS)

-------------------------------------------------
Dynamic Programming
-------------------------------------------------
70. Climbing Stairs
198. House Robber
213. House Robber II
322. Coin Change
300. Longest Increasing Subsequence
1143. Longest Common Subsequence
5. Longest Palindromic Substring
647. Palindromic Substrings
139. Word Break
72. Edit Distance
416. Partition Equal Subset Sum
62. Unique Paths
64. Minimum Path Sum

-------------------------------------------------
Backtracking
-------------------------------------------------
78. Subsets
90. Subsets II
46. Permutations
47. Permutations II
39. Combination Sum
40. Combination Sum II
131. Palindrome Partitioning
79. Word Search

-------------------------------------------------
Design / Tries
-------------------------------------------------
146. LRU Cache
208. Implement Trie (Prefix Tree)
211. Add and Search Word – Data structure design

-------------------------------------------------
Stretch Set (Optional / Advanced)
-------------------------------------------------
42. Trapping Rain Water (two pointers/stack)
4. Median of Two Sorted Arrays (divide & conquer)
269. Alien Dictionary (Premium; topo)
212. Word Search II (Trie + backtracking)
85. Maximal Rectangle (stack + DP)
678. Valid Parenthesis String (greedy)
301. Remove Invalid Parentheses (BFS/backtracking)
75. Sort Colors (Dutch National Flag)
33. Search in Rotated Sorted Array (binary search variant)
34. Find First and Last Position of Element in Sorted Array
153. Find Minimum in Rotated Sorted Array
380. Insert Delete GetRandom O(1) (design)
981. Time Based Key-Value Store (design)
410. Split Array Largest Sum (binary search on answer)
871. Minimum Number of Refueling Stops (heap/greedy)
632. Smallest Range Covering Elements from K Lists (heap)
